CREATE OR REPLACE PACKAGE BODY VDCASERFRY_ALBARAN_DEMANDA AS
	PROCEDURE V10_CARGA_DATOS_DEMANDA (verror_code IN OUT NUMBER, verror_message IN OUT VARCHAR2)IS
	------------------------------------------------------------------------------------------------------------------------
	--CREADOR: V10.
	--FECHA: 21-04-2023.
	-- Fichero de datos separación por ;  // Excel guardado como "CSV delimitado por comas"
	-- CLIENTE ...................>> CASERFRI - GAMBASTART
	-- Ruta establecida ..........>> RUTAGAMBAENTRADA as 'E:\V10\V10DATOS\INTERFASES\GAMBASTAR\ENTRADAS';
	-- Ruta establecida ..........>> RUTAGAMBAENTRADABK as 'E:\V10\V10DATOS\INTERFASES\GAMBASTAR\ENTRADAS\BACKUP';
	-- Ruta establecida ..........>> RUTAGAMBASALIDA as 'E:\V10\V10DATOS\INTERFASES\GAMBASTAR\SALIDAS';
	-- Ruta establecida ..........>> RUTAGAMBASALIDABK as 'E:\V10\V10DATOS\INTERFASES\GAMBASTAR\SALIDAS\BACKUP';
	------------------------------------------------------------------------------------------------------------------------
	vpath   VARCHAR2(100) := 'RUTAGAMBAENTRADA';  
	vpathbk VARCHAR2(100) := 'RUTAGAMBAENTRADABK';  
	vfichnom  VARCHAR2(100) := 'Prueba0v10_Datos_Albaran_GambaStart.csv'; --FALTA DEFINIR 
	vsep    VARCHAR2(1) := ';';
	vFICH     UTL_FILE.FILE_TYPE;      
	vCADENA varchar2(32767) := '';
	vNLINEA NUMBER := 0;
	vDEC    VDDEMANDACAB%ROWTYPE;
	vDEL    VDDEMANDALIN%ROWTYPE;
	vCON    VDCONTE%ROWTYPE;
	vMIRUTASRV VARCHAR2(255);
	vFINFICH NUMBER;
	MICODCAB NUMBER := 0;
	MICODLIN NUMBER := 0;
	BEGIN
		--SE VALIDA QUE EXISTA EL DIRECTORIO
		SELECT DIRECTORY_PATH INTO vMIRUTASRV FROM SYS.DBA_DIRECTORIES WHERE UPPER(DIRECTORY_NAME) = vpath;
 
		--APERTURA DEL ARCHIVO DE DATOS CSV RECIBIDOS POR EL CLIENTE
		vFICH := UTL_FILE.FOPEN(vpath,vfichnom,'R');
		VDLOG.PONMENSAJE('CARGAFICHINTERPEDIDOSSM','Directorio : '||vMIRUTASRV||' , Fichero obtenido: '||vFICHNOM);
       --
		vNLINEA:=1;
		UTL_FILE.GET_LINE(vFICH, vCADENA);--Se salta la primera línea (cabecera)

       LOOP
         
			--SE LEEN LAS LINEAS DEL ARCHIVO Y SE GUARDA EN EL LOG SI EXISTE ALGUNA EXCEPCION
			BEGIN
				UTL_FILE.GET_LINE(vFICH,vCADENA); 
		  
				-- vFINFICH = 1 --> FIN DE FICHERO
				SELECT (CASE WHEN LENGTH(vCADENA)>0 THEN 0 ELSE 1 END) INTO vFINFICH FROM DUAL;
				IF vFINFICH=1 THEN
					VDLOG.PONMENSAJE('CARGAFICHALBARANGAMBASTART', 'EOFCV FIN CORRECTO DE FICHERO '||vFICHNOM);
				EXIT;
				END IF;
      
				EXCEPTION
				WHEN NO_DATA_FOUND THEN
					verror_code := SQLCODE;
					verror_message := SQLERRM;
					dbms_output.put_line( 'UTL_FILE.GET_LINE // NO_DATA_FOUND');
					dbms_output.put_line(verror_code || '  ' || verror_message);
					dbms_output.put_line('=====================================================');
					VDLOG.PONMENSAJE('CARGAFICHALBARANGAMBASTART', 'ERROR ORACLE LEYENDO EL ARCHIVO UTL_FILE.GET_LINE: ' ||TO_CHAR(SQLCODE)||' '||TO_CHAR(SQLERRM));
				EXIT;
				WHEN OTHERS THEN  
				verror_code := SQLCODE;
					verror_message := SQLERRM;                                                                                            
					dbms_output.put_line( 'UTL_FILE.GET_LINE // OTHERS');
					dbms_output.put_line(verror_code || '  ' || verror_message);
					dbms_output.put_line('=====================================================');
					VDLOG.PONMENSAJE('CARGAFICHALBARANGAMBASTART', 'ERROR ORACLE LEYENDO EL ARCHIVO UTL_FILE.GET_LINE: ' ||TO_CHAR(SQLCODE)||' '||TO_CHAR(SQLERRM));
				EXIT;                                                                                                  
			END;
               -------------------------------------------------------------------------------------------------    
        
			--SE GUARDAN LAS VARIABLES QUE SE INSERTARAN EN LA TABLA VDDEMANDALIN
			vDEL.LINDEMANDA := VD.PIECE(vCADENA,vsep,2);--NUMERO DE LINEA DE LA DEMANDA
			vDEL.CODART := VD.PIECE(vCADENA,vsep,4);--CODIGO DEL ARTICULO = REFERENCIA CVS
			vCON.CNTSSCC := VD.PIECE(vCADENA,vsep,7);--CAMPO SSCC EN EL ARCHIVO
			vDEL.CANTIDAD := TO_NUMBER(NVL(VD.PIECE(vCADENA,vsep,12),'0'))*1000; -- LA CANTIDAD VIENE EN KG PERO EN LA BD ESTA EN GRAMOS
  
    
			--INICIO DE VALIDACION DE INSERT EN VDDEMANDACAB, SE VALIDA SOLO UNA DE LAS LINEAS
			IF MICODCAB IS NULL OR NVL(MICODLIN,0) > vDEL.LINDEMANDA THEN
			BEGIN
				vDEC.VDEXTRA := VD.PIECE(vCADENA,vsep,1);--COD. ALBARAN CLIENTE-COD SALIDA ALB
				vDEC.TIPODEMANDA := 'ALBASALIDA';--SIEMPRE ES EL MISMO TIPO DE DEMANDA EN EL INSERT
				vDEC.CODCLIENTE := VD.PIECE(vCADENA,vsep,16);--COD. ALBARAN CLIENTE
				-- vDEC.CLAVEEXT := NVL(VD.PIECE(vCADENA,vsep,4),'10023');--COD. DIVISION
        
				--SE BUSCA EL SEQUENCIAL DE LA ORDEN DE DEMANDA
				SELECT TO_CHAR(VDSECDEMANDACAB.NEXTVAL) INTO vDEC.CODDEMANDA FROM DUAL;
      
				--SE INSERTA EN LA TABLA VDDEMANDACAB
				INSERT INTO VDDEMANDACAB
				(
				  TIPODEMANDA,
				  CODDEMANDA,
				  CLAVEEXT, --NO VIENE EN EL ARCHIVO
				  BACKORDER,
				  PRIORI,
				  STATUS,
				  CODOPEINSERT,
				  FECINSERT,
				  HORAINSERT,
				  --FECINI,
				  --HORAINI,
				  --FECFIN,
				  --HORAFIN,
				  --FECNEC,
				  VDEXTRA,
				  CODCOMEN,
				  CODOPEMODIF,
				  FECMODIF,
				  HORAMODIF,
				  CODCLIENTE
				)
				VALUES
				(
				  vDEC.TIPODEMANDA,
				  vDEC.CODDEMANDA,
				  NULL,
				  'T', --BACKORDER VALIDAR DEFAULT
				  '50', --PRIORI VALIDAR DEFAULT
				  100, ---FALTA DEFINIR
				  VDUSER.GETUSER,
				  VD.FECHASYS,
				  VD.HORASYS,
				  vDEC.VDEXTRA,
				  VDSECCOMEN.NEXTVAL,--VALIDAR VDSECCOMEN.NEXTVAL
				  VDUSER.GETUSER,
				  VD.FECHASYS,
				  VD.HORASYS,
				  vDEC.CODCLIENTE
				);
				--GUARDA MENSAJE EN EL LOG DEL ARCHIVO
				COMMIT;
    
				--SE VALIDA SI QUEDO GUARDADO EL REG EN LA TABLA PARA ESCRIBIR LA RESPUESTA EN EL LOG
				SELECT CODDEMANDA INTO MICODCAB FROM VDDEMANDACAB WHERE CODDEMANDA =  vDEC.CODDEMANDA;
    
				--SI GUARDO EL REGISTRO SE INFORMA EN EL LOG
				IF MICODCAB IS NOT NULL THEN
				  VDLOG.PONMENSAJE('CARGAFICHALBARANGAMBASTART','Se guardo correctamente el registro en VDDEMANDACAB CON VALOR: '||vDEC.CODDEMANDA);
				--DE LO CONTRARIO SE INFORMA EN EL LOG
				ELSE
				  VDLOG.PONMENSAJE('CARGAFICHALBARANGAMBASTART','No se guardo el registro en VDDEMANDACAB CON VALOR: '||vDEC.CODDEMANDA);
				END IF;
    
				--SI OCURRE UN ERROR SE REGISTRA EN EL LOG
				EXCEPTION WHEN OTHERS THEN
				  --GUARDA EL MENSAJE EN EL LOG S
				 --VDLOG.PONMENSAJE('CARGAFICHALBARANGAMBASTART','Se cargo correctamente el registro en VDDEMANDACAB CON VALOR: '||vDEC.CODDEMANDA);
				  VDLOG.PONMENSAJE('CARGAFICHALBARANGAMBASTART', 'ERROR ORACLE INSERTANDO REGISTRO EN LA TABLA VDDEMANDACAB CON VALOR: '||vDEC.CODDEMANDA|| ', CODIGO DEL ERROR: ' ||SQLCODE||' '||SQLERRM);
			   END;
			END IF;
			--FIN DE VALIDACION DE INSERT EN VDDEMANDACAB
      
    
			--SE BUSCA EL CODIGO DE MATRICULA QUE ESTA REGISTRADO EN LA TABLA VD CONTE
			select XVDGAMBASTAR.DAMEMATRICULA(vCON.CNTSSCC) INTO vCON.CODMAT from dual;

			IF MICODCAB IS NOT NULL THEN
			BEGIN
				Insert into VDDEMANDALIN
				(
					TIPODEMANDA,
					CODDEMANDA,
					LINDEMANDA,
					CLAVEEXT,
					CODART,
					CODLOT,
					UNIEMB,
					TIPOEMBA,
					MARCASTK,
					--MARCASTKORIGEN,
					BLOQUEOS,
					NUMEROSERIE,
					CODMAT,
					BULTO,
					CODRECEP,
					PRECIOUNI,
					BACKORDER,
					UNIAGRUPA,
					TIPOREDONDEO,
					ORDENRESERVA,
					ORDENRESERVAUBI,
					--CODUBIORI,
					--CODAREAORI,
					CODUBIDEST,
					CODAREADEST,
					CANTIDAD,
					STATUS,
					CODOPEINSERT,
					FECINSERT,
					HORAINSERT,
					--FECINI,
					--HORAINI,
					--FECFIN,
					--HORAFIN,
					VDEXTRA,
					CODCOMEN,
					CODOPEMODIF,
					FECMODIF,
					HORAMODIF
				)
				SELECT
					vDEC.TIPODEMANDA,
					vDEC.CODDEMANDA,
					vDEL.LINDEMANDA,
					REC.CODDIV CLAVEEXT,
					vDEL.CODART,
					vDEL.CODLOT,
					STK.UNIEMB,
					STK.TIPOEMBA,
					STK.MARCASTK,
					--'' MARCASTKORIGEN,
					DECODE(TO_NUMBER(STK.BLOQUEOS),0,NULL,'S') BLOQUEOS,
					STK.NUMEROSERIE,
					vCON.CODMAT,
					ROUND(NVL(vDEL.CANTIDAD,STK.CANTIDAD)/STK.UNIEMB) BULTO,
					STK.CODRECEP, --NO SE UTILIZA POR AHORA
					STK.PRECIOUNI,
					'E' BACKORDER,
					'U' UNIAGRUPA,
					'N' TIPOREDONDEO,
					'A' ORDENRESERVA,
					'A' ORDENRESERVAUBI,
					--CODUBIORI,
					--CODAREAORI,
					'EXPED' CODUBIDEST,
					'EXPED' CODAREADEST,
					NVL(vDEL.CANTIDAD,STK.CANTIDAD) CANTIDAD,
					100 STATUS, --validar status
					VDUSER.GETUSER CODOPEINSERT,
					VD.FECHASYS FECINSERT,
					VD.HORASYS HORAINSERT,
					--FECINI,
					--HORAINI,
					--FECFIN,
					--HORAFIN,
					vDEC.VDEXTRA,
					VDSECCOMEN.NEXTVAL CODCOMEN,
					VDUSER.GETUSER CODOPEMODIF,
					VD.FECHASYS FECMODIF,
					VD.HORASYS HORAMODIF
				FROM VDARTIC AR,VDSTOCK STK,VDCONTE CNT, VDRECEPCAB REC
				WHERE AR.CODART = vDEL.CODART
				AND CNT.CODMAT= vCON.CODMAT
				AND STK.CODART=AR.CODART
				AND STK.CODMAT = CNT.CODMAT
				AND AR.CODDIV = vDEC.CLAVEEXT
				AND REC.CODRECEP = STK.CODRECEP
				AND ROWNUM = 1;
				COMMIT;
       
				--SE VALIDA SI GUARDO EL REGISTRO EN LA TABLA PARA INFORMARLO EN EL LOG
				SELECT LINDEMANDA INTO MICODLIN FROM VDDEMANDALIN WHERE CODDEMANDA = vDEC.CODDEMANDA AND LINDEMANDA = vDEL.LINDEMANDA;

				--SI GUARDO EL REGISTRO SE INFORMA EN EL LOG
				IF MICODLIN IS NOT NULL THEN
					VDLOG.PONMENSAJE('CARGAFICHALBARANGAMBASTART','Se cargo correctamente el registro en VDDEMANDALIN CON VALOR: '||vDEC.CODDEMANDA|| ' Y linea: '|| vDEL.LINDEMANDA);
				--DE LO CONTRARIO SE INFORMA EN EL LOG
				ELSE
					VDLOG.PONMENSAJE('CARGAFICHALBARANGAMBASTART','NO Se cargo correctamente el registro en VDDEMANDALIN CON VALOR: '||vDEC.CODDEMANDA|| ' Y linea: '|| vDEL.LINDEMANDA);
				END IF;

				--SI OCURRE ALGUN ERROR SE REGISTRA EN EL LOG
				EXCEPTION WHEN OTHERS THEN
					VDLOG.PONMENSAJE('CARGAFICHALBARANGAMBASTART', 'ERROR ORACLE INSERTANDO REGISTRO EN LA TABLA VDDEMANDALIN CON VALOR: '||vDEC.CODDEMANDA|| 'Y linea: '||  vDEL.LINDEMANDA ||', CODIGO DEL ERROR: ' ||SQLCODE||' '||SQLERRM);
				END;
			END IF;
		END LOOP;
  
		--TEMPORAL
		UPDATE VDDEMANDACAB
			SET CLAVEEXT = (
				SELECT
					CLAVEEXT
				FROM VDDEMANDALIN
				WHERE CODDEMANDA = vDEC.CODDEMANDA
				AND ROWNUM = 1
			)
		WHERE CODDEMANDA = vDEC.CODDEMANDA;
  
		-- Cerrar el fichero de datos
		UTL_FILE.FCLOSE(vFICH);  -- Cierro el fichero de datos
		VDLOG.PONMENSAJE('CARGAFICHALBARANGAMBASTART', 'V10_CARGA_DATOS_DEMANDA.Fichero '||vFICHNOM||' se ha cargado');
       
		-- Hacer un security-copy del fichero
		UTL_FILE.FCOPY(vpath, vfichnom, vpathbk, vfichnom || '_' || TO_CHAR(SYSDATE,'YYYYMMDD_HH24MISS'));
		VDLOG.PONMENSAJE('CARGAFICHALBARANGAMBASTART', 'V10_CARGA_DATOS_DEMANDA.Fichero '||vFICHNOM||TO_CHAR(SYSDATE,'YYYYMMDD_HH24MISS')||' copiado a carpeta de backup ');
		-- Elimina el fichero de ENTRADA una vez pasado a BACK
		--UTL_FILE.FREMOVE(vpath,vfichnom);  -- Elimino el fichero de datos tratado, loas datos "teoricamente" ya están en la tabla XVDENTRADAS
        
	END V10_CARGA_DATOS_DEMANDA;
END VDCASERFRY_ALBARAN_DEMANDA;